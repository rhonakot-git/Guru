// プラグインの設定
plugins {
    id 'java'                                    			// Javaプロジェクト用のプラグインを適用。Javaのコンパイルやテストなどのタスクを有効化。
    id 'org.springframework.boot' version '3.4.3' 			// Spring Bootプラグインを適用し、バージョン3.4.3を指定。Spring Bootアプリケーションのビルドと実行をサポート。
    id 'io.spring.dependency-management' version '1.1.7' 	// Springの依存関係管理プラグインを適用し、バージョン1.1.7を指定。依存関係のバージョンを自動管理。
}

// プロジェクトのグループ名とバージョン
group = 'com.example.guru'                     // プロジェクトのグループIDを指定。パッケージ名やMavenのgroupIdに使用される。
version = '1.0'                                // プロジェクトのバージョンを指定。ここでは1.0として、スナップショット版を示す。

// Spring Bootの設定
springBoot {
    mainClass = 'com.example.guru.GuruApplication' // アプリケーションのメインクラスを指定。実行可能JARのエントリーポイントとなるクラス。
}

// Javaの設定
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Java 17を使用するようツールチェーンを設定。ビルド時にJava 17が使用される。
    }
}

// 依存関係を取得するリポジトリ
repositories {
    mavenCentral()                            // Maven Centralリポジトリを使用し、依存関係をダウンロードするための設定。
}

// 依存関係の設定
dependencies {
    // 既存の依存関係（データベース、セキュリティ、Web、Thymeleaf関連）
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'       // JPAを使用したデータベースアクセスをサポートするSpring Bootスターター。
    implementation 'org.springframework.boot:spring-boot-starter-security'       // Spring Securityによる認証・認可機能を追加するスターター。
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'      // Thymeleafテンプレートエンジンを統合するためのスターター。
    implementation 'org.springframework.boot:spring-boot-starter-web'            // Spring MVCを使用したWebアプリケーション構築のためのスターター。
    implementation 'org.springframework.boot:spring-boot-starter-validation'     // バリデーション（入力値の検証）機能を追加するスターター。
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'       // ThymeleafでSpring Securityの機能を使用可能にする統合ライブラリ。
    implementation files('libs/ojdbc11.jar')                                     // Oracle JDBCドライバをローカルのlibsディレクトリから読み込む依存関係。
    implementation 'org.springframework.boot:spring-boot-starter-webflux'        // WebClientを使用したリアクティブなHTTPクライアントをサポートするスターター。
    implementation 'org.springframework.boot:spring-boot-starter-cache'          // キャッシュ機能を有効化するためのスターター。
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'          // JSONデータをJavaオブジェクトに変換するためのライブラリ（バージョン2.15.2）。
    implementation 'org.apache.commons:commons-csv:1.8'                          // Apache Commons CSVライブラリを使用してCSVファイルの読み書きをサポート（バージョン1.8）。
    implementation 'com.opencsv:opencsv:5.9'                                     // OpenCSVライブラリを使用してCSVファイルの処理をサポート（バージョン5.9）。
    implementation 'net.sf.jasperreports:jasperreports:6.21.3'                   // JasperReportsライブラリを使用してレポート生成をサポート（バージョン6.21.3）。
    implementation 'net.sf.jasperreports:jasperreports-fonts:6.21.3'             // JasperReports用のフォントパックを追加（バージョン6.21.3）。
    implementation 'com.itextpdf:itextpdf:5.5.13.3'                              // iTextライブラリを使用してPDF生成をサポート（バージョン5.5.13.3）。
    implementation 'org.apache.poi:poi:5.2.3'                                    // Apache POIライブラリを使用してExcelファイルの読み書きをサポート（バージョン5.2.3）。
    implementation 'org.apache.poi:poi-ooxml:5.2.3'                              // Apache POIのOOXMLサポートを追加し、Excel 2007以降の形式を扱う（バージョン5.2.3）。

    // テスト関連の依存関係
    testImplementation 'org.springframework.boot:spring-boot-starter-test'       // Spring Bootのテストフレームワークをサポートするスターター。
    testImplementation 'org.springframework.security:spring-security-test'       // Spring Securityのテストをサポートするためのライブラリ。
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'                 // JUnitプラットフォームランチャーをテスト実行時に使用する依存関係。
}

// テストタスクの設定
tasks.named('test') {
    useJUnitPlatform()                        // JUnitプラットフォームを使用してテストを実行する設定。
}